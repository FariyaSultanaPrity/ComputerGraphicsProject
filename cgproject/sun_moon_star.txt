#include<bits/stdc++.h>
#include<windows.h>
#include <GL/gl.h>
#include <GL/glut.h>
///For music
#include <Mmsystem.h>
#include<windows.h>
#include<fstream>

using namespace std;
#pragma comment(lib, "Winmm.lib")
#define int GLint
#define PI 3.1416



float sun_x=620 ,sun_y=330,sp_x=0.5f,sp_y=1.0f;



///Circle
void circle(GLfloat x, GLfloat y, GLfloat rad){
    GLint triangle_amt=60,i;
    GLfloat t_pi=2*PI;
    glBegin(GL_TRIANGLE_FAN);
    //glColor3ub(43,78,88);
    glVertex2f(x,y);
    for(i=0;i<=triangle_amt;i++){
        GLfloat dx=rad*cos(i*t_pi/triangle_amt), dy=rad*sin(i*t_pi/triangle_amt);
        glVertex2f(x+dx,y+dy);
    }
    glEnd();
}

///Sky
void sky(){
    glPushMatrix();
    if(day)glColor3ub(157, 216, 250);
    else glColor3ub(4, 11, 51);

    glBegin(GL_POLYGON);
    glVertex2i(0,300);
    glVertex2i(1000,300);
    glVertex2i(1000,500);
    glVertex2i(0,500);
    glEnd();
    glPopMatrix();
}




///Sun
void sun(){
    if(day){
        glPushMatrix();
        glColor3ub(252, 212, 64);
        glTranslatef(sun_x,sun_y,0.0);
        circle(0,0,30);
        glPopMatrix();
    }
}
///Moon
void moon(){
    if(!day){
        glPushMatrix();

        glColor3ub(255, 255, 255);
        glTranslatef(0.0,100.0,0.0);
        circle(320,360,20);
        glColor3ub(4, 11, 51);
        circle(320,380,15);
        glPopMatrix();
    }
}
///Star
void star(){
    if(!day){
        glPushMatrix();
        glColor3ub(255,255,255);
        glPointSize(4);
        glBegin(GL_POINTS);

        glVertex2i(100,400);
        glVertex2i(120,420);
        glVertex2i(150,450);
        glVertex2i(170,470);
        glVertex2i(200,430);
        glVertex2i(230,470);
        glVertex2i(350,460);
        glVertex2i(900,400);
        glVertex2i(580,470);
        glVertex2i(840,460);
        glVertex2i(750,400);
        glVertex2i(950,400);
        glVertex2i(760,420);
        glVertex2i(690,450);
        glVertex2i(550,470);
        glVertex2i(790,430);
        glVertex2i(830,470);
        glVertex2i(690,460);
        glVertex2i(590,400);
        glVertex2i(490,430);
        glVertex2i(330,470);
        glVertex2i(390,460);
        glVertex2i(460,400);
        glVertex2i(390,360);
        glVertex2i(930,370);
        glVertex2i(30,370);
        glVertex2i(290,360);
        glVertex2i(60,360);
        glEnd();

        glPopMatrix();
    }
}






///Main
void display(){
	glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(255.0,0.0,1.0);

	sky();

	star();
	sun();
    moon();
    

	glFlush();
}
void init(void){
	glClearColor(0.65, 1.0, 1.0, 0.0);
	glMatrixMode(GL_PROJECTION);
	gluOrtho2D(0.0, 1000.0, 0.0, 500.0);
}

void update(int value){

   
    ///Sun Control
    if(sun_y>480){
        sun_x=650;
        sun_y=290;
        day=0;
    }
    sun_x-=sp_x;
    sun_y+=sp_y;
    
    
}



void handleKeypress(unsigned char key, int x, int y){
	switch (key){
        case 'd':
            day=1;
            break;
        case 'n':
            day=0;
            break;
           

        glutPostRedisplay();
	}
}
void credit(){

    cout<<"------------------------------------------------------"<<endl;
    cout<<"Press d for Day "<<endl;
    cout<<"Press n for Night "<<endl;
    

    cout<<"------------------------------------------------------"<<endl;

}
int main(int argc, char** argv){
    credit();
    ///Music Background
    //PlaySound(TEXT("sound.wav"), NULL, SND_ASYNC);
    ///system("pause");

	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowPosition(0, 0);
	glutInitWindowSize(1900, 1900);
	glutCreateWindow("CG Project- War Zone");
	init();
	glutDisplayFunc(display);
    glutKeyboardFunc(handleKeypress);

    glutTimerFunc(1000, update, 0);
    glutMainLoop();
}

